name: Frontend Test and Build

on:
  push:
    branches:
      - main  # Run tests and build on every push to the main branch
  pull_request:
    branches:
      - main  # Run on pull requests targeting the main branch
  workflow_dispatch:  # Allow manual trigger of the workflow

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      # Step 3: Install frontend dependencies
      - name: Install dependencies
        working-directory: ./frontend  # Adjust this path if needed
        run: npm install  # Use npm ci for a clean install

      # Step 5: Build frontend
      - name: Build frontend
        working-directory: ./frontend  # Adjust this path if needed
        run: npm run build

      - name: Install dependencies
        working-directory: ./backend  # Adjust this path if needed
        run: npm ci  # Clean install for CI environments

      # Step 4: Run backend tests
      - name: Run backend tests
        working-directory: ./backend  # Adjust this path if needed
        run: npm test  # Assuming you have a test script in package.json

      # Step 5: Run backend server
      - name: Run backend server
        working-directory: ./backend  # Adjust this path if needed
        run: |
          npm start &
          sleep 5  # Wait for the server to initialize
        continue-on-error: true  # Optional: Allows the pipeline to continue if the server crashes

      # Optional: Verify the backend is running (e.g., health check)
      - name: Verify backend health
        run: curl http://localhost:3000/health  # Adjust to your API's health check route
        continue-on-error: true 
